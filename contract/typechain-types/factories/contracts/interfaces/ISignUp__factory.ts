/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISignUp,
  ISignUpInterface,
} from "../../../contracts/interfaces/ISignUp";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "root",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "group",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "signal",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "nullifierHash",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "appID",
            type: "string",
          },
          {
            internalType: "string",
            name: "actionID",
            type: "string",
          },
          {
            internalType: "uint256[8]",
            name: "proof",
            type: "uint256[8]",
          },
        ],
        internalType: "struct WorldIDVerification",
        name: "worldIDVerification",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISignUp__factory {
  static readonly abi = _abi;
  static createInterface(): ISignUpInterface {
    return new utils.Interface(_abi) as ISignUpInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISignUp {
    return new Contract(address, _abi, signerOrProvider) as ISignUp;
  }
}
