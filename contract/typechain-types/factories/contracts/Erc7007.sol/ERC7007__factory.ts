/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC7007,
  ERC7007Interface,
} from "../../../contracts/Erc7007.sol/ERC7007";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifierContract",
        type: "address",
      },
      {
        internalType: "contract IUserRegistry",
        name: "_userRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMetadata",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenIdMetadata",
    outputs: [
      {
        internalType: "bytes16",
        name: "metadata",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "userRegistry",
    outputs: [
      {
        internalType: "contract IUserRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifierContract",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160095534801562000015575f80fd5b5060405162001e9838038062001e988339810160408190526200003891620000e4565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250815f9081620000849190620001c1565b506001620000938282620001c1565b5050600680546001600160a01b039485166001600160a01b03199182161790915560078054939094169216919091179091555062000289565b6001600160a01b0381168114620000e1575f80fd5b50565b5f8060408385031215620000f6575f80fd5b82516200010381620000cc565b60208401519092506200011681620000cc565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200014a57607f821691505b6020821081036200016957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620001bc575f81815260208120601f850160051c81016020861015620001975750805b601f850160051c820191505b81811015620001b857828155600101620001a3565b5050505b505050565b81516001600160401b03811115620001dd57620001dd62000121565b620001f581620001ee845462000135565b846200016f565b602080601f8311600181146200022b575f8415620002135750858301515b5f19600386901b1c1916600185901b178555620001b8565b5f85815260208120601f198616915b828110156200025b578886015182559484019460019091019084016200023a565b50858210156200027957878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b611c0180620002975f395ff3fe608060405234801561000f575f80fd5b5060043610610163575f3560e01c806395d89b41116100c7578063b88d4fde1161007d578063cf69568811610063578063cf6956881461031e578063de8f50a114610331578063e985e9c514610344575f80fd5b8063b88d4fde146102f8578063c87b56dd1461030b575f80fd5b8063a1448194116100ad578063a1448194146102b0578063a22cb465146102c3578063a574cea4146102d6575f80fd5b806395d89b4114610295578063a0ddb4821461029d575f80fd5b806323d9da4d1161011c5780635c7460d6116101025780635c7460d61461024e5780636352211e1461026157806370a0823114610274575f80fd5b806323d9da4d146101f757806342842e0e1461023b575f80fd5b8063081812fc1161014c578063081812fc146101a4578063095ea7b3146101cf57806323b872dd146101e4575f80fd5b806301ffc9a71461016757806306fdde031461018f575b5f80fd5b61017a61017536600461159a565b61037f565b60405190151581526020015b60405180910390f35b61019761041b565b6040516101869190611602565b6101b76101b2366004611614565b6104aa565b6040516001600160a01b039091168152602001610186565b6101e26101dd366004611646565b6104cf565b005b6101e26101f236600461166e565b610604565b610219610205366004611614565b60086020525f908152604090205460801b81565b6040516fffffffffffffffffffffffffffffffff199091168152602001610186565b6101e261024936600461166e565b61067b565b6007546101b7906001600160a01b031681565b6101b761026f366004611614565b610695565b6102876102823660046116a7565b6106f9565b604051908152602001610186565b610197610791565b6102876102ab366004611705565b6107a0565b6101e26102be366004611646565b61099d565b6101e26102d13660046117cd565b6109ab565b6102196102e4366004611614565b5f9081526008602052604090205460801b90565b6101e2610306366004611816565b6109b6565b610197610319366004611614565b610a34565b6006546101b7906001600160a01b031681565b61017a61033f3660046118eb565b610aa4565b61017a61035236600461197e565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806103e157506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061041557507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60605f8054610429906119af565b80601f0160208091040260200160405190810160405280929190818152602001828054610455906119af565b80156104a05780601f10610477576101008083540402835291602001916104a0565b820191905f5260205f20905b81548152906001019060200180831161048357829003601f168201915b5050505050905090565b5f6104b482610be8565b505f908152600460205260409020546001600160a01b031690565b5f6104d982610695565b9050806001600160a01b0316836001600160a01b0316036105675760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b038216148061058357506105838133610352565b6105f55760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161055e565b6105ff8383610c4e565b505050565b61060e3382610cc8565b6106705760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161055e565b6105ff838383610d45565b6105ff83838360405180602001604052805f8152506109b6565b5f818152600260205260408120546001600160a01b0316806104155760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161055e565b5f6001600160a01b0382166107765760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161055e565b506001600160a01b03165f9081526003602052604090205490565b606060018054610429906119af565b6007546040517f0255fa1e0000000000000000000000000000000000000000000000000000000081523360048201525f916001600160a01b031690630255fa1e90602401602060405180830381865afa1580156107ff573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061082391906119e7565b61086f5760405162461bcd60e51b815260206004820152601360248201527f55736572204e6f74205265676973746572656400000000000000000000000000604482015260640161055e565b61087d898989898787610aa4565b6108c95760405162461bcd60e51b815260206004820152601060248201527f696e636f7272726563742070726f6f6600000000000000000000000000000000604482015260640161055e565b600980549081905f6108da83611a02565b91905055506108e9338261099d565b6108f38789611a26565b5f828152600860205260409081902080546fffffffffffffffffffffffffffffffff191660809390931c92909217909155516109329089908990611a5f565b60405180910390208a8a60405161094a929190611a5f565b6040518091039020827f83fef9808ae10e73695fe6d88c16161b94df9c2be1eaf9626aab97b6fb7823a2898989896040516109889493929190611a96565b60405180910390a49998505050505050505050565b6109a78282610f49565b5050565b6109a7338383610f62565b6109c03383610cc8565b610a225760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161055e565b610a2e8484848461102f565b50505050565b6060610a3f82610be8565b5f610a5460408051602081019091525f815290565b90505f815111610a725760405180602001604052805f815250610a9d565b80610a7c846110ad565b604051602001610a8d929190611ac7565b6040516020818303038152906040525b9392505050565b5f606087878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250855186945090925015159050610af057610af0611af5565b602002602001018190525085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250508351849250600191508110610b4557610b45611af5565b60209081029190910101526006546040517f3a4114ea0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690633a4114ea90610b9d90849088908890600401611b09565b602060405180830381865afa158015610bb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bdc91906119e7565b98975050505050505050565b5f818152600260205260409020546001600160a01b0316610c4b5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161055e565b50565b5f818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610c8f82610695565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f80610cd383610695565b9050806001600160a01b0316846001600160a01b03161480610d1957506001600160a01b038082165f9081526005602090815260408083209388168352929052205460ff165b80610d3d5750836001600160a01b0316610d32846104aa565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d5882610695565b6001600160a01b031614610dbc5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161055e565b6001600160a01b038216610e375760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161055e565b826001600160a01b0316610e4a82610695565b6001600160a01b031614610eae5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161055e565b5f818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6109a7828260405180602001604052805f81525061114a565b816001600160a01b0316836001600160a01b031603610fc35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161055e565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61103a848484610d45565b611046848484846111c7565b610a2e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161055e565b60605f6110b98361130f565b60010190505f8167ffffffffffffffff8111156110d8576110d8611802565b6040519080825280601f01601f191660200182016040528015611102576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461110c57509392505050565b61115483836113f0565b6111605f8484846111c7565b6105ff5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161055e565b5f6001600160a01b0384163b1561130457604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061120a903390899088908890600401611b7f565b6020604051808303815f875af1925050508015611244575060408051601f3d908101601f1916820190925261124191810190611bb0565b60015b6112ea573d808015611271576040519150601f19603f3d011682016040523d82523d5f602084013e611276565b606091505b5080515f036112e25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161055e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d3d565b506001949350505050565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611357577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611383576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106113a157662386f26fc10000830492506010015b6305f5e10083106113b9576305f5e100830492506008015b61271083106113cd57612710830492506004015b606483106113df576064830492506002015b600a83106104155760010192915050565b6001600160a01b0382166114465760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161055e565b5f818152600260205260409020546001600160a01b0316156114aa5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161055e565b5f818152600260205260409020546001600160a01b03161561150e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161055e565b6001600160a01b0382165f818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610c4b575f80fd5b5f602082840312156115aa575f80fd5b8135610a9d81611585565b5f5b838110156115cf5781810151838201526020016115b7565b50505f910152565b5f81518084526115ee8160208601602086016115b5565b601f01601f19169290920160200192915050565b602081525f610a9d60208301846115d7565b5f60208284031215611624575f80fd5b5035919050565b80356001600160a01b0381168114611641575f80fd5b919050565b5f8060408385031215611657575f80fd5b6116608361162b565b946020939093013593505050565b5f805f60608486031215611680575f80fd5b6116898461162b565b92506116976020850161162b565b9150604084013590509250925092565b5f602082840312156116b7575f80fd5b610a9d8261162b565b5f8083601f8401126116d0575f80fd5b50813567ffffffffffffffff8111156116e7575f80fd5b6020830191508360208285010111156116fe575f80fd5b9250929050565b5f805f805f805f806080898b03121561171c575f80fd5b883567ffffffffffffffff80821115611733575f80fd5b61173f8c838d016116c0565b909a50985060208b0135915080821115611757575f80fd5b6117638c838d016116c0565b909850965060408b013591508082111561177b575f80fd5b6117878c838d016116c0565b909650945060608b013591508082111561179f575f80fd5b506117ac8b828c016116c0565b999c989b5096995094979396929594505050565b8015158114610c4b575f80fd5b5f80604083850312156117de575f80fd5b6117e78361162b565b915060208301356117f7816117c0565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215611829575f80fd5b6118328561162b565b93506118406020860161162b565b925060408501359150606085013567ffffffffffffffff80821115611863575f80fd5b818701915087601f830112611876575f80fd5b81358181111561188857611888611802565b604051601f8201601f19908116603f011681019083821181831017156118b0576118b0611802565b816040528281528a60208487010111156118c8575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f805f805f8060608789031215611900575f80fd5b863567ffffffffffffffff80821115611917575f80fd5b6119238a838b016116c0565b9098509650602089013591508082111561193b575f80fd5b6119478a838b016116c0565b9096509450604089013591508082111561195f575f80fd5b5061196c89828a016116c0565b979a9699509497509295939492505050565b5f806040838503121561198f575f80fd5b6119988361162b565b91506119a66020840161162b565b90509250929050565b600181811c908216806119c357607f821691505b6020821081036119e157634e487b7160e01b5f52602260045260245ffd5b50919050565b5f602082840312156119f7575f80fd5b8151610a9d816117c0565b5f60018201611a1f57634e487b7160e01b5f52601160045260245ffd5b5060010190565b6fffffffffffffffffffffffffffffffff198135818116916010851015611a575780818660100360031b1b83161692505b505092915050565b818382375f9101908152919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f611aa9604083018688611a6e565b8281036020840152611abc818587611a6e565b979650505050505050565b5f8351611ad88184602088016115b5565b835190830190611aec8183602088016115b5565b01949350505050565b634e487b7160e01b5f52603260045260245ffd5b5f604082016040835280865180835260608501915060608160051b860101925060208089015f5b83811015611b5e57605f19888703018552611b4c8683516115d7565b95509382019390820190600101611b30565b505085840381870152505050611b75818587611a6e565b9695505050505050565b5f6001600160a01b03808716835280861660208401525083604083015260806060830152611b7560808301846115d7565b5f60208284031215611bc0575f80fd5b8151610a9d8161158556fea2646970667358221220bb5150be881b7255c8ac68e7c718bffdcac1de434133e4d96028287ff33afd6f64736f6c63430008140033";

type ERC7007ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC7007ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC7007__factory extends ContractFactory {
  constructor(...args: ERC7007ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifierContract: PromiseOrValue<string>,
    _userRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC7007> {
    return super.deploy(
      _verifierContract,
      _userRegistry,
      overrides || {}
    ) as Promise<ERC7007>;
  }
  override getDeployTransaction(
    _verifierContract: PromiseOrValue<string>,
    _userRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifierContract,
      _userRegistry,
      overrides || {}
    );
  }
  override attach(address: string): ERC7007 {
    return super.attach(address) as ERC7007;
  }
  override connect(signer: Signer): ERC7007__factory {
    return super.connect(signer) as ERC7007__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC7007Interface {
    return new utils.Interface(_abi) as ERC7007Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC7007 {
    return new Contract(address, _abi, signerOrProvider) as ERC7007;
  }
}
