/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC7007,
  ERC7007Interface,
} from "../../../contracts/Erc7007.sol/ERC7007";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifierContract",
        type: "address",
      },
      {
        internalType: "contract IUserRegistry",
        name: "_userRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMetadata",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
    ],
    name: "masterMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenIdMetadata",
    outputs: [
      {
        internalType: "bytes16",
        name: "metadata",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "userRegistry",
    outputs: [
      {
        internalType: "contract IUserRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifierContract",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160095534801562000015575f80fd5b5060405162001f0438038062001f048339810160408190526200003891620000e4565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250815f9081620000849190620001c1565b506001620000938282620001c1565b5050600680546001600160a01b039485166001600160a01b03199182161790915560078054939094169216919091179091555062000289565b6001600160a01b0381168114620000e1575f80fd5b50565b5f8060408385031215620000f6575f80fd5b82516200010381620000cc565b60208401519092506200011681620000cc565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200014a57607f821691505b6020821081036200016957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620001bc575f81815260208120601f850160051c81016020861015620001975750805b601f850160051c820191505b81811015620001b857828155600101620001a3565b5050505b505050565b81516001600160401b03811115620001dd57620001dd62000121565b620001f581620001ee845462000135565b846200016f565b602080601f8311600181146200022b575f8415620002135750858301515b5f19600386901b1c1916600185901b178555620001b8565b5f85815260208120601f198616915b828110156200025b578886015182559484019460019091019084016200023a565b50858210156200027957878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b611c6d80620002975f395ff3fe608060405234801561000f575f80fd5b506004361061016e575f3560e01c806395d89b41116100d2578063b88d4fde11610088578063de8f50a111610063578063de8f50a11461033c578063e75466e81461034f578063e985e9c514610362575f80fd5b8063b88d4fde14610303578063c87b56dd14610316578063cf69568814610329575f80fd5b8063a1448194116100b8578063a1448194146102bb578063a22cb465146102ce578063a574cea4146102e1575f80fd5b806395d89b41146102a0578063a0ddb482146102a8575f80fd5b806323d9da4d116101275780635c7460d61161010d5780635c7460d6146102595780636352211e1461026c57806370a082311461027f575f80fd5b806323d9da4d1461020257806342842e0e14610246575f80fd5b8063081812fc11610157578063081812fc146101af578063095ea7b3146101da57806323b872dd146101ef575f80fd5b806301ffc9a71461017257806306fdde031461019a575b5f80fd5b61018561018036600461158d565b61039d565b60405190151581526020015b60405180910390f35b6101a2610439565b60405161019191906115f5565b6101c26101bd366004611607565b6104c8565b6040516001600160a01b039091168152602001610191565b6101ed6101e8366004611639565b6104ed565b005b6101ed6101fd366004611661565b610622565b610224610210366004611607565b60086020525f908152604090205460801b81565b6040516fffffffffffffffffffffffffffffffff199091168152602001610191565b6101ed610254366004611661565b610699565b6007546101c2906001600160a01b031681565b6101c261027a366004611607565b6106b3565b61029261028d36600461169a565b610717565b604051908152602001610191565b6101a26107af565b6102926102b63660046116f8565b6107be565b6101ed6102c9366004611639565b610893565b6101ed6102dc3660046117c0565b6108a1565b6102246102ef366004611607565b5f9081526008602052604090205460801b90565b6101ed610311366004611809565b6108ac565b6101a2610324366004611607565b61092a565b6006546101c2906001600160a01b031681565b61018561034a3660046118de565b61099a565b61029261035d366004611971565b610ade565b6101856103703660046119b0565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806103ff57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061043357507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60605f8054610447906119e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610473906119e1565b80156104be5780601f10610495576101008083540402835291602001916104be565b820191905f5260205f20905b8154815290600101906020018083116104a157829003601f168201915b5050505050905090565b5f6104d282610bdb565b505f908152600460205260409020546001600160a01b031690565b5f6104f7826106b3565b9050806001600160a01b0316836001600160a01b0316036105855760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806105a157506105a18133610370565b6106135760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161057c565b61061d8383610c41565b505050565b61062c3382610cbb565b61068e5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161057c565b61061d838383610d38565b61061d83838360405180602001604052805f8152506108ac565b5f818152600260205260408120546001600160a01b0316806104335760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161057c565b5f6001600160a01b0382166107945760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161057c565b506001600160a01b03165f9081526003602052604090205490565b606060018054610447906119e1565b600980545f918190836107d083611a19565b91905055506107df3382610893565b6107e98789611a3d565b5f828152600860205260409081902080546fffffffffffffffffffffffffffffffff191660809390931c92909217909155516108289089908990611a76565b60405180910390208a8a604051610840929190611a76565b6040518091039020827f83fef9808ae10e73695fe6d88c16161b94df9c2be1eaf9626aab97b6fb7823a28989898960405161087e9493929190611aad565b60405180910390a49998505050505050505050565b61089d8282610f3c565b5050565b61089d338383610f55565b6108b63383610cbb565b6109185760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161057c565b61092484848484611022565b50505050565b606061093582610bdb565b5f61094a60408051602081019091525f815290565b90505f8151116109685760405180602001604052805f815250610993565b80610972846110a0565b604051602001610983929190611ade565b6040516020818303038152906040525b9392505050565b5f606087878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052508551869450909250151590506109e6576109e6611b0c565b602002602001018190525085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250508351849250600191508110610a3b57610a3b611b0c565b60209081029190910101526006546040517f3a4114ea0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690633a4114ea90610a9390849088908890600401611b20565b602060405180830381865afa158015610aae573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ad29190611b96565b98975050505050505050565b600980545f91819083610af083611a19565b9190505550610aff3382610893565b610b098385611a3d565b5f8281526008602090815260409182902080546fffffffffffffffffffffffffffffffff191660809490941c9390931790925580518082018252600481527f66616b65000000000000000000000000000000000000000000000000000000009281019290925251610b7d9086908690611a76565b604051809103902081604051610b939190611bb1565b6040518091039020837f83fef9808ae10e73695fe6d88c16161b94df9c2be1eaf9626aab97b6fb7823a284604051610bcb9190611bcc565b60405180910390a4509392505050565b5f818152600260205260409020546001600160a01b0316610c3e5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161057c565b50565b5f818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610c82826106b3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f80610cc6836106b3565b9050806001600160a01b0316846001600160a01b03161480610d0c57506001600160a01b038082165f9081526005602090815260408083209388168352929052205460ff165b80610d305750836001600160a01b0316610d25846104c8565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d4b826106b3565b6001600160a01b031614610daf5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161057c565b6001600160a01b038216610e2a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161057c565b826001600160a01b0316610e3d826106b3565b6001600160a01b031614610ea15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161057c565b5f818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61089d828260405180602001604052805f81525061113d565b816001600160a01b0316836001600160a01b031603610fb65760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161057c565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61102d848484610d38565b611039848484846111ba565b6109245760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161057c565b60605f6110ac83611302565b60010190505f8167ffffffffffffffff8111156110cb576110cb6117f5565b6040519080825280601f01601f1916602001820160405280156110f5576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846110ff57509392505050565b61114783836113e3565b6111535f8484846111ba565b61061d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161057c565b5f6001600160a01b0384163b156112f757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111fd903390899088908890600401611beb565b6020604051808303815f875af1925050508015611237575060408051601f3d908101601f1916820190925261123491810190611c1c565b60015b6112dd573d808015611264576040519150601f19603f3d011682016040523d82523d5f602084013e611269565b606091505b5080515f036112d55760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161057c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d30565b506001949350505050565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061134a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611376576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061139457662386f26fc10000830492506010015b6305f5e10083106113ac576305f5e100830492506008015b61271083106113c057612710830492506004015b606483106113d2576064830492506002015b600a83106104335760010192915050565b6001600160a01b0382166114395760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161057c565b5f818152600260205260409020546001600160a01b03161561149d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161057c565b5f818152600260205260409020546001600160a01b0316156115015760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161057c565b6001600160a01b0382165f818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610c3e575f80fd5b5f6020828403121561159d575f80fd5b813561099381611578565b5f5b838110156115c25781810151838201526020016115aa565b50505f910152565b5f81518084526115e18160208601602086016115a8565b601f01601f19169290920160200192915050565b602081525f61099360208301846115ca565b5f60208284031215611617575f80fd5b5035919050565b80356001600160a01b0381168114611634575f80fd5b919050565b5f806040838503121561164a575f80fd5b6116538361161e565b946020939093013593505050565b5f805f60608486031215611673575f80fd5b61167c8461161e565b925061168a6020850161161e565b9150604084013590509250925092565b5f602082840312156116aa575f80fd5b6109938261161e565b5f8083601f8401126116c3575f80fd5b50813567ffffffffffffffff8111156116da575f80fd5b6020830191508360208285010111156116f1575f80fd5b9250929050565b5f805f805f805f806080898b03121561170f575f80fd5b883567ffffffffffffffff80821115611726575f80fd5b6117328c838d016116b3565b909a50985060208b013591508082111561174a575f80fd5b6117568c838d016116b3565b909850965060408b013591508082111561176e575f80fd5b61177a8c838d016116b3565b909650945060608b0135915080821115611792575f80fd5b5061179f8b828c016116b3565b999c989b5096995094979396929594505050565b8015158114610c3e575f80fd5b5f80604083850312156117d1575f80fd5b6117da8361161e565b915060208301356117ea816117b3565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f806080858703121561181c575f80fd5b6118258561161e565b93506118336020860161161e565b925060408501359150606085013567ffffffffffffffff80821115611856575f80fd5b818701915087601f830112611869575f80fd5b81358181111561187b5761187b6117f5565b604051601f8201601f19908116603f011681019083821181831017156118a3576118a36117f5565b816040528281528a60208487010111156118bb575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f805f805f80606087890312156118f3575f80fd5b863567ffffffffffffffff8082111561190a575f80fd5b6119168a838b016116b3565b9098509650602089013591508082111561192e575f80fd5b61193a8a838b016116b3565b90965094506040890135915080821115611952575f80fd5b5061195f89828a016116b3565b979a9699509497509295939492505050565b5f8060208385031215611982575f80fd5b823567ffffffffffffffff811115611998575f80fd5b6119a4858286016116b3565b90969095509350505050565b5f80604083850312156119c1575f80fd5b6119ca8361161e565b91506119d86020840161161e565b90509250929050565b600181811c908216806119f557607f821691505b602082108103611a1357634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60018201611a3657634e487b7160e01b5f52601160045260245ffd5b5060010190565b6fffffffffffffffffffffffffffffffff198135818116916010851015611a6e5780818660100360031b1b83161692505b505092915050565b818382375f9101908152919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f611ac0604083018688611a85565b8281036020840152611ad3818587611a85565b979650505050505050565b5f8351611aef8184602088016115a8565b835190830190611b038183602088016115a8565b01949350505050565b634e487b7160e01b5f52603260045260245ffd5b5f604082016040835280865180835260608501915060608160051b860101925060208089015f5b83811015611b7557605f19888703018552611b638683516115ca565b95509382019390820190600101611b47565b505085840381870152505050611b8c818587611a85565b9695505050505050565b5f60208284031215611ba6575f80fd5b8151610993816117b3565b5f8251611bc28184602087016115a8565b9190910192915050565b604081525f6040820152606060208201525f61099360608301846115ca565b5f6001600160a01b03808716835280861660208401525083604083015260806060830152611b8c60808301846115ca565b5f60208284031215611c2c575f80fd5b81516109938161157856fea2646970667358221220ece78400249bc27d818d5ed5d4fd442520d623045b2193a443e4f3eb50f6b48064736f6c63430008140033";

type ERC7007ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC7007ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC7007__factory extends ContractFactory {
  constructor(...args: ERC7007ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifierContract: PromiseOrValue<string>,
    _userRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC7007> {
    return super.deploy(
      _verifierContract,
      _userRegistry,
      overrides || {}
    ) as Promise<ERC7007>;
  }
  override getDeployTransaction(
    _verifierContract: PromiseOrValue<string>,
    _userRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifierContract,
      _userRegistry,
      overrides || {}
    );
  }
  override attach(address: string): ERC7007 {
    return super.attach(address) as ERC7007;
  }
  override connect(signer: Signer): ERC7007__factory {
    return super.connect(signer) as ERC7007__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC7007Interface {
    return new utils.Interface(_abi) as ERC7007Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC7007 {
    return new Contract(address, _abi, signerOrProvider) as ERC7007;
  }
}
