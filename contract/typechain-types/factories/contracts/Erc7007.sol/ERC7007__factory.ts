/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC7007,
  ERC7007Interface,
} from "../../../contracts/Erc7007.sol/ERC7007";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifierContract",
        type: "address",
      },
      {
        internalType: "contract IUserRegistry",
        name: "_userRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMetadata",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
    ],
    name: "masterMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenIdMetadata",
    outputs: [
      {
        internalType: "bytes16",
        name: "metadata",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "userRegistry",
    outputs: [
      {
        internalType: "contract IUserRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifierContract",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160095534801562000015575f80fd5b5060405162001f5538038062001f558339810160408190526200003891620000e4565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250815f9081620000849190620001c1565b506001620000938282620001c1565b5050600680546001600160a01b039485166001600160a01b03199182161790915560078054939094169216919091179091555062000289565b6001600160a01b0381168114620000e1575f80fd5b50565b5f8060408385031215620000f6575f80fd5b82516200010381620000cc565b60208401519092506200011681620000cc565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200014a57607f821691505b6020821081036200016957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620001bc575f81815260208120601f850160051c81016020861015620001975750805b601f850160051c820191505b81811015620001b857828155600101620001a3565b5050505b505050565b81516001600160401b03811115620001dd57620001dd62000121565b620001f581620001ee845462000135565b846200016f565b602080601f8311600181146200022b575f8415620002135750858301515b5f19600386901b1c1916600185901b178555620001b8565b5f85815260208120601f198616915b828110156200025b578886015182559484019460019091019084016200023a565b50858210156200027957878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b611cbe80620002975f395ff3fe608060405234801561000f575f80fd5b506004361061016e575f3560e01c806395d89b41116100d2578063b88d4fde11610088578063de8f50a111610063578063de8f50a11461033c578063e75466e81461034f578063e985e9c514610362575f80fd5b8063b88d4fde14610303578063c87b56dd14610316578063cf69568814610329575f80fd5b8063a1448194116100b8578063a1448194146102bb578063a22cb465146102ce578063a574cea4146102e1575f80fd5b806395d89b41146102a0578063a0ddb482146102a8575f80fd5b806323d9da4d116101275780635c7460d61161010d5780635c7460d6146102595780636352211e1461026c57806370a082311461027f575f80fd5b806323d9da4d1461020257806342842e0e14610246575f80fd5b8063081812fc11610157578063081812fc146101af578063095ea7b3146101da57806323b872dd146101ef575f80fd5b806301ffc9a71461017257806306fdde031461019a575b5f80fd5b610185610180366004611618565b61039d565b60405190151581526020015b60405180910390f35b6101a2610439565b6040516101919190611680565b6101c26101bd366004611692565b6104c8565b6040516001600160a01b039091168152602001610191565b6101ed6101e83660046116c4565b6104ed565b005b6101ed6101fd3660046116ec565b610622565b610224610210366004611692565b60086020525f908152604090205460801b81565b6040516fffffffffffffffffffffffffffffffff199091168152602001610191565b6101ed6102543660046116ec565b610699565b6007546101c2906001600160a01b031681565b6101c261027a366004611692565b6106b3565b61029261028d366004611725565b610717565b604051908152602001610191565b6101a26107af565b6102926102b6366004611783565b6107be565b6101ed6102c93660046116c4565b6109bb565b6101ed6102dc36600461184b565b6109c9565b6102246102ef366004611692565b5f9081526008602052604090205460801b90565b6101ed610311366004611894565b6109d4565b6101a2610324366004611692565b610a52565b6006546101c2906001600160a01b031681565b61018561034a366004611969565b610ac2565b61029261035d3660046119fc565b610c06565b610185610370366004611a3b565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806103ff57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061043357507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60605f805461044790611a6c565b80601f016020809104026020016040519081016040528092919081815260200182805461047390611a6c565b80156104be5780601f10610495576101008083540402835291602001916104be565b820191905f5260205f20905b8154815290600101906020018083116104a157829003601f168201915b5050505050905090565b5f6104d282610c66565b505f908152600460205260409020546001600160a01b031690565b5f6104f7826106b3565b9050806001600160a01b0316836001600160a01b0316036105855760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806105a157506105a18133610370565b6106135760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161057c565b61061d8383610ccc565b505050565b61062c3382610d46565b61068e5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161057c565b61061d838383610dc3565b61061d83838360405180602001604052805f8152506109d4565b5f818152600260205260408120546001600160a01b0316806104335760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161057c565b5f6001600160a01b0382166107945760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161057c565b506001600160a01b03165f9081526003602052604090205490565b60606001805461044790611a6c565b6007546040517f0255fa1e0000000000000000000000000000000000000000000000000000000081523360048201525f916001600160a01b031690630255fa1e90602401602060405180830381865afa15801561081d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108419190611aa4565b61088d5760405162461bcd60e51b815260206004820152601360248201527f55736572204e6f74205265676973746572656400000000000000000000000000604482015260640161057c565b61089b898989898787610ac2565b6108e75760405162461bcd60e51b815260206004820152601060248201527f696e636f7272726563742070726f6f6600000000000000000000000000000000604482015260640161057c565b600980549081905f6108f883611abf565b919050555061090733826109bb565b6109118789611ae3565b5f828152600860205260409081902080546fffffffffffffffffffffffffffffffff191660809390931c92909217909155516109509089908990611b1c565b60405180910390208a8a604051610968929190611b1c565b6040518091039020827f83fef9808ae10e73695fe6d88c16161b94df9c2be1eaf9626aab97b6fb7823a2898989896040516109a69493929190611b53565b60405180910390a49998505050505050505050565b6109c58282610fc7565b5050565b6109c5338383610fe0565b6109de3383610d46565b610a405760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161057c565b610a4c848484846110ad565b50505050565b6060610a5d82610c66565b5f610a7260408051602081019091525f815290565b90505f815111610a905760405180602001604052805f815250610abb565b80610a9a8461112b565b604051602001610aab929190611b84565b6040516020818303038152906040525b9392505050565b5f606087878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250855186945090925015159050610b0e57610b0e611bb2565b602002602001018190525085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250508351849250600191508110610b6357610b63611bb2565b60209081029190910101526006546040517f3a4114ea0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690633a4114ea90610bbb90849088908890600401611bc6565b602060405180830381865afa158015610bd6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bfa9190611aa4565b98975050505050505050565b600980545f91819083610c1883611abf565b9190505550610c2733826109bb565b610c318385611ae3565b5f82815260086020526040902080546fffffffffffffffffffffffffffffffff191660809290921c9190911790559392505050565b5f818152600260205260409020546001600160a01b0316610cc95760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161057c565b50565b5f818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610d0d826106b3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f80610d51836106b3565b9050806001600160a01b0316846001600160a01b03161480610d9757506001600160a01b038082165f9081526005602090815260408083209388168352929052205460ff165b80610dbb5750836001600160a01b0316610db0846104c8565b6001600160a01b0316145b949350505050565b826001600160a01b0316610dd6826106b3565b6001600160a01b031614610e3a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161057c565b6001600160a01b038216610eb55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161057c565b826001600160a01b0316610ec8826106b3565b6001600160a01b031614610f2c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161057c565b5f818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6109c5828260405180602001604052805f8152506111c8565b816001600160a01b0316836001600160a01b0316036110415760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161057c565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6110b8848484610dc3565b6110c484848484611245565b610a4c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161057c565b60605f6111378361138d565b60010190505f8167ffffffffffffffff81111561115657611156611880565b6040519080825280601f01601f191660200182016040528015611180576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461118a57509392505050565b6111d2838361146e565b6111de5f848484611245565b61061d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161057c565b5f6001600160a01b0384163b1561138257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611288903390899088908890600401611c3c565b6020604051808303815f875af19250505080156112c2575060408051601f3d908101601f191682019092526112bf91810190611c6d565b60015b611368573d8080156112ef576040519150601f19603f3d011682016040523d82523d5f602084013e6112f4565b606091505b5080515f036113605760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161057c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610dbb565b506001949350505050565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106113d5577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611401576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061141f57662386f26fc10000830492506010015b6305f5e1008310611437576305f5e100830492506008015b612710831061144b57612710830492506004015b6064831061145d576064830492506002015b600a83106104335760010192915050565b6001600160a01b0382166114c45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161057c565b5f818152600260205260409020546001600160a01b0316156115285760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161057c565b5f818152600260205260409020546001600160a01b03161561158c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161057c565b6001600160a01b0382165f818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610cc9575f80fd5b5f60208284031215611628575f80fd5b8135610abb81611603565b5f5b8381101561164d578181015183820152602001611635565b50505f910152565b5f815180845261166c816020860160208601611633565b601f01601f19169290920160200192915050565b602081525f610abb6020830184611655565b5f602082840312156116a2575f80fd5b5035919050565b80356001600160a01b03811681146116bf575f80fd5b919050565b5f80604083850312156116d5575f80fd5b6116de836116a9565b946020939093013593505050565b5f805f606084860312156116fe575f80fd5b611707846116a9565b9250611715602085016116a9565b9150604084013590509250925092565b5f60208284031215611735575f80fd5b610abb826116a9565b5f8083601f84011261174e575f80fd5b50813567ffffffffffffffff811115611765575f80fd5b60208301915083602082850101111561177c575f80fd5b9250929050565b5f805f805f805f806080898b03121561179a575f80fd5b883567ffffffffffffffff808211156117b1575f80fd5b6117bd8c838d0161173e565b909a50985060208b01359150808211156117d5575f80fd5b6117e18c838d0161173e565b909850965060408b01359150808211156117f9575f80fd5b6118058c838d0161173e565b909650945060608b013591508082111561181d575f80fd5b5061182a8b828c0161173e565b999c989b5096995094979396929594505050565b8015158114610cc9575f80fd5b5f806040838503121561185c575f80fd5b611865836116a9565b915060208301356118758161183e565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156118a7575f80fd5b6118b0856116a9565b93506118be602086016116a9565b925060408501359150606085013567ffffffffffffffff808211156118e1575f80fd5b818701915087601f8301126118f4575f80fd5b81358181111561190657611906611880565b604051601f8201601f19908116603f0116810190838211818310171561192e5761192e611880565b816040528281528a6020848701011115611946575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f805f805f806060878903121561197e575f80fd5b863567ffffffffffffffff80821115611995575f80fd5b6119a18a838b0161173e565b909850965060208901359150808211156119b9575f80fd5b6119c58a838b0161173e565b909650945060408901359150808211156119dd575f80fd5b506119ea89828a0161173e565b979a9699509497509295939492505050565b5f8060208385031215611a0d575f80fd5b823567ffffffffffffffff811115611a23575f80fd5b611a2f8582860161173e565b90969095509350505050565b5f8060408385031215611a4c575f80fd5b611a55836116a9565b9150611a63602084016116a9565b90509250929050565b600181811c90821680611a8057607f821691505b602082108103611a9e57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215611ab4575f80fd5b8151610abb8161183e565b5f60018201611adc57634e487b7160e01b5f52601160045260245ffd5b5060010190565b6fffffffffffffffffffffffffffffffff198135818116916010851015611b145780818660100360031b1b83161692505b505092915050565b818382375f9101908152919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f611b66604083018688611b2b565b8281036020840152611b79818587611b2b565b979650505050505050565b5f8351611b95818460208801611633565b835190830190611ba9818360208801611633565b01949350505050565b634e487b7160e01b5f52603260045260245ffd5b5f604082016040835280865180835260608501915060608160051b860101925060208089015f5b83811015611c1b57605f19888703018552611c09868351611655565b95509382019390820190600101611bed565b505085840381870152505050611c32818587611b2b565b9695505050505050565b5f6001600160a01b03808716835280861660208401525083604083015260806060830152611c326080830184611655565b5f60208284031215611c7d575f80fd5b8151610abb8161160356fea2646970667358221220a977b96ef8581f8b8dd02bcabf64ec6402a716b6b0fc4027f5c656b6db01046364736f6c63430008140033";

type ERC7007ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC7007ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC7007__factory extends ContractFactory {
  constructor(...args: ERC7007ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifierContract: PromiseOrValue<string>,
    _userRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC7007> {
    return super.deploy(
      _verifierContract,
      _userRegistry,
      overrides || {}
    ) as Promise<ERC7007>;
  }
  override getDeployTransaction(
    _verifierContract: PromiseOrValue<string>,
    _userRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifierContract,
      _userRegistry,
      overrides || {}
    );
  }
  override attach(address: string): ERC7007 {
    return super.attach(address) as ERC7007;
  }
  override connect(signer: Signer): ERC7007__factory {
    return super.connect(signer) as ERC7007__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC7007Interface {
    return new utils.Interface(_abi) as ERC7007Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC7007 {
    return new Contract(address, _abi, signerOrProvider) as ERC7007;
  }
}
