/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721,
  ERC721Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC721/ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b506040516200153538038062001535833981016040819052620000339162000116565b5f62000040838262000208565b5060016200004f828262000208565b505050620002d0565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007c575f80fd5b81516001600160401b038082111562000099576200009962000058565b604051601f8301601f19908116603f01168101908282118183101715620000c457620000c462000058565b81604052838152602092508683858801011115620000e0575f80fd5b5f91505b83821015620001035785820183015181830184015290820190620000e4565b5f93810190920192909252949350505050565b5f806040838503121562000128575f80fd5b82516001600160401b03808211156200013f575f80fd5b6200014d868387016200006c565b9350602085015191508082111562000163575f80fd5b5062000172858286016200006c565b9150509250929050565b600181811c908216806200019157607f821691505b602082108103620001b057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000203575f81815260208120601f850160051c81016020861015620001de5750805b601f850160051c820191505b81811015620001ff57828155600101620001ea565b5050505b505050565b81516001600160401b0381111562000224576200022462000058565b6200023c816200023584546200017c565b84620001b6565b602080601f83116001811462000272575f84156200025a5750858301515b5f19600386901b1c1916600185901b178555620001ff565b5f85815260208120601f198616915b82811015620002a25788860151825594840194600190910190840162000281565b5085821015620002c057878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61125780620002de5f395ff3fe608060405234801561000f575f80fd5b50600436106100da575f3560e01c80636352211e11610088578063a22cb46511610063578063a22cb465146101bd578063b88d4fde146101d0578063c87b56dd146101e3578063e985e9c5146101f6575f80fd5b80636352211e1461018157806370a082311461019457806395d89b41146101b5575f80fd5b8063095ea7b3116100b8578063095ea7b31461014657806323b872dd1461015b57806342842e0e1461016e575f80fd5b806301ffc9a7146100de57806306fdde0314610106578063081812fc1461011b575b5f80fd5b6100f16100ec366004610eec565b610231565b60405190151581526020015b60405180910390f35b61010e6102cd565b6040516100fd9190610f54565b61012e610129366004610f66565b61035c565b6040516001600160a01b0390911681526020016100fd565b610159610154366004610f98565b610381565b005b610159610169366004610fc0565b6104b6565b61015961017c366004610fc0565b61052d565b61012e61018f366004610f66565b610547565b6101a76101a2366004610ff9565b6105ab565b6040519081526020016100fd565b61010e610643565b6101596101cb366004611012565b610652565b6101596101de36600461105f565b610661565b61010e6101f1366004610f66565b6106df565b6100f1610204366004611134565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061029357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102c757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60605f80546102db90611165565b80601f016020809104026020016040519081016040528092919081815260200182805461030790611165565b80156103525780601f1061032957610100808354040283529160200191610352565b820191905f5260205f20905b81548152906001019060200180831161033557829003601f168201915b5050505050905090565b5f6103668261074f565b505f908152600460205260409020546001600160a01b031690565b5f61038b82610547565b9050806001600160a01b0316836001600160a01b0316036104195760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b038216148061043557506104358133610204565b6104a75760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610410565b6104b183836107b5565b505050565b6104c0338261082f565b6105225760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610410565b6104b18383836108ac565b6104b183838360405180602001604052805f815250610661565b5f818152600260205260408120546001600160a01b0316806102c75760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610410565b5f6001600160a01b0382166106285760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610410565b506001600160a01b03165f9081526003602052604090205490565b6060600180546102db90611165565b61065d338383610ab0565b5050565b61066b338361082f565b6106cd5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610410565b6106d984848484610b7d565b50505050565b60606106ea8261074f565b5f6106ff60408051602081019091525f815290565b90505f81511161071d5760405180602001604052805f815250610748565b8061072784610c06565b60405160200161073892919061119d565b6040516020818303038152906040525b9392505050565b5f818152600260205260409020546001600160a01b03166107b25760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610410565b50565b5f818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906107f682610547565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f8061083a83610547565b9050806001600160a01b0316846001600160a01b0316148061088057506001600160a01b038082165f9081526005602090815260408083209388168352929052205460ff165b806108a45750836001600160a01b03166108998461035c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bf82610547565b6001600160a01b0316146109235760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610410565b6001600160a01b03821661099e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610410565b826001600160a01b03166109b182610547565b6001600160a01b031614610a155760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610410565b5f818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610b115760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610410565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b888484846108ac565b610b9484848484610ca3565b6106d95760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610410565b60605f610c1283610df6565b60010190505f8167ffffffffffffffff811115610c3157610c3161104b565b6040519080825280601f01601f191660200182016040528015610c5b576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610c6557509392505050565b5f6001600160a01b0384163b15610deb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ce69033908990889088906004016111cb565b6020604051808303815f875af1925050508015610d20575060408051601f3d908101601f19168201909252610d1d91810190611206565b60015b610dd1573d808015610d4d576040519150601f19603f3d011682016040523d82523d5f602084013e610d52565b606091505b5080515f03610dc95760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610410565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a4565b506001949350505050565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610e3e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610e6a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e8857662386f26fc10000830492506010015b6305f5e1008310610ea0576305f5e100830492506008015b6127108310610eb457612710830492506004015b60648310610ec6576064830492506002015b600a83106102c75760010192915050565b6001600160e01b0319811681146107b2575f80fd5b5f60208284031215610efc575f80fd5b813561074881610ed7565b5f5b83811015610f21578181015183820152602001610f09565b50505f910152565b5f8151808452610f40816020860160208601610f07565b601f01601f19169290920160200192915050565b602081525f6107486020830184610f29565b5f60208284031215610f76575f80fd5b5035919050565b80356001600160a01b0381168114610f93575f80fd5b919050565b5f8060408385031215610fa9575f80fd5b610fb283610f7d565b946020939093013593505050565b5f805f60608486031215610fd2575f80fd5b610fdb84610f7d565b9250610fe960208501610f7d565b9150604084013590509250925092565b5f60208284031215611009575f80fd5b61074882610f7d565b5f8060408385031215611023575f80fd5b61102c83610f7d565b915060208301358015158114611040575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215611072575f80fd5b61107b85610f7d565b935061108960208601610f7d565b925060408501359150606085013567ffffffffffffffff808211156110ac575f80fd5b818701915087601f8301126110bf575f80fd5b8135818111156110d1576110d161104b565b604051601f8201601f19908116603f011681019083821181831017156110f9576110f961104b565b816040528281528a6020848701011115611111575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f8060408385031215611145575f80fd5b61114e83610f7d565b915061115c60208401610f7d565b90509250929050565b600181811c9082168061117957607f821691505b60208210810361119757634e487b7160e01b5f52602260045260245ffd5b50919050565b5f83516111ae818460208801610f07565b8351908301906111c2818360208801610f07565b01949350505050565b5f6001600160a01b038087168352808616602084015250836040830152608060608301526111fc6080830184610f29565b9695505050505050565b5f60208284031215611216575f80fd5b815161074881610ed756fea2646970667358221220f055f93845e29a93e7b1005de9504506d4cf1238eae43b676650e78ebc82177064736f6c63430008140033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
